{"ast":null,"code":"import request from \"../api\";\nimport { EMAIL_CONTENT_REQUEST, EMAIL_LIST_FAILURE, EMAIL_LIST_SUCCESS, EMAIL_LIST_REQUEST, EMAIL_CONTENT_SUCCESS, EMAIL_CONTENT_FAILURE } from \"./constants\";\nexport const getEmailList = (read, pageNo) => async dispatch => {\n  try {\n    dispatch({\n      type: EMAIL_LIST_REQUEST\n    });\n    let url = \"/?page=1\";\n    pageNo && (url = `/?page=${pageNo}`);\n    const {\n      data\n    } = await request.get(url);\n    const list = data.list.reduce((acc, element) => {\n      if (!read.includes(element.id)) {\n        return [element, ...acc];\n      }\n      return [...acc, element];\n    }, []);\n    dispatch({\n      type: EMAIL_LIST_SUCCESS,\n      payload: list\n    });\n  } catch (err) {\n    dispatch({\n      type: EMAIL_LIST_FAILURE,\n      payload: err.message\n    });\n  }\n};\nexport const getEmailById = id => async dispatch => {\n  try {\n    dispatch({\n      type: EMAIL_CONTENT_REQUEST\n    });\n    const {\n      data\n    } = await request.get(\"/\", {\n      params: {\n        id\n      }\n    });\n    dispatch({\n      type: EMAIL_CONTENT_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: EMAIL_CONTENT_FAILURE,\n      payload: err.message\n    });\n  }\n};","map":{"version":3,"names":["request","EMAIL_CONTENT_REQUEST","EMAIL_LIST_FAILURE","EMAIL_LIST_SUCCESS","EMAIL_LIST_REQUEST","EMAIL_CONTENT_SUCCESS","EMAIL_CONTENT_FAILURE","getEmailList","read","pageNo","dispatch","type","url","data","get","list","reduce","acc","element","includes","id","payload","err","message","getEmailById","params"],"sources":["E:/roc8-assignment/email-client-app/src/store/emailAction.js"],"sourcesContent":["import request from \"../api\";\r\nimport {\r\n    EMAIL_CONTENT_REQUEST,\r\n    EMAIL_LIST_FAILURE,\r\n    EMAIL_LIST_SUCCESS,\r\n    EMAIL_LIST_REQUEST,\r\n    EMAIL_CONTENT_SUCCESS,\r\n    EMAIL_CONTENT_FAILURE,\r\n  } from \"./constants\";\r\n\r\nexport const getEmailList = (read, pageNo) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: EMAIL_LIST_REQUEST })\r\n        let url = \"/?page=1\";\r\n        pageNo && (url=`/?page=${pageNo}`)\r\n        const { data } = await request.get(url);\r\n        const list = data.list.reduce((acc, element) => {\r\n            if (!read.includes(element.id)) {\r\n              return [element, ...acc];\r\n            }\r\n            return [...acc, element];\r\n        }, []);\r\n        dispatch({\r\n            type: EMAIL_LIST_SUCCESS,\r\n            payload: list,\r\n        })\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: EMAIL_LIST_FAILURE,\r\n            payload: err.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getEmailById = (id) => async(dispatch) => {\r\n    try {\r\n        dispatch({type: EMAIL_CONTENT_REQUEST})\r\n        const { data } = await request.get(\"/\",{\r\n            params: {\r\n                id,\r\n            },\r\n        })\r\n        dispatch({\r\n            type: EMAIL_CONTENT_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: EMAIL_CONTENT_FAILURE,\r\n            payload: err.message\r\n        })\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,OAAO,MAAM,QAAQ;AAC5B,SACIC,qBAAqB,EACrBC,kBAAkB,EAClBC,kBAAkB,EAClBC,kBAAkB,EAClBC,qBAAqB,EACrBC,qBAAqB,QAChB,aAAa;AAEtB,OAAO,MAAMC,YAAY,GAAGA,CAACC,IAAI,EAAEC,MAAM,KAAK,MAAOC,QAAQ,IAAK;EAC9D,IAAI;IACAA,QAAQ,CAAC;MAACC,IAAI,EAAEP;IAAmB,CAAC,CAAC;IACrC,IAAIQ,GAAG,GAAG,UAAU;IACpBH,MAAM,KAAKG,GAAG,GAAE,UAASH,MAAO,EAAC,CAAC;IAClC,MAAM;MAAEI;IAAK,CAAC,GAAG,MAAMb,OAAO,CAACc,GAAG,CAACF,GAAG,CAAC;IACvC,MAAMG,IAAI,GAAGF,IAAI,CAACE,IAAI,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAK;MAC5C,IAAI,CAACV,IAAI,CAACW,QAAQ,CAACD,OAAO,CAACE,EAAE,CAAC,EAAE;QAC9B,OAAO,CAACF,OAAO,EAAE,GAAGD,GAAG,CAAC;MAC1B;MACA,OAAO,CAAC,GAAGA,GAAG,EAAEC,OAAO,CAAC;IAC5B,CAAC,EAAE,EAAE,CAAC;IACNR,QAAQ,CAAC;MACLC,IAAI,EAAER,kBAAkB;MACxBkB,OAAO,EAAEN;IACb,CAAC,CAAC;EACN,CAAC,CACD,OAAMO,GAAG,EAAC;IACNZ,QAAQ,CAAC;MACLC,IAAI,EAAET,kBAAkB;MACxBmB,OAAO,EAAEC,GAAG,CAACC;IACjB,CAAC,CAAC;EACN;AACJ,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIJ,EAAE,IAAK,MAAMV,QAAQ,IAAK;EACnD,IAAI;IACAA,QAAQ,CAAC;MAACC,IAAI,EAAEV;IAAqB,CAAC,CAAC;IACvC,MAAM;MAAEY;IAAK,CAAC,GAAG,MAAMb,OAAO,CAACc,GAAG,CAAC,GAAG,EAAC;MACnCW,MAAM,EAAE;QACJL;MACJ;IACJ,CAAC,CAAC;IACFV,QAAQ,CAAC;MACLC,IAAI,EAAEN,qBAAqB;MAC3BgB,OAAO,EAAER;IACb,CAAC,CAAC;EACN,CAAC,CACD,OAAMS,GAAG,EAAC;IACNZ,QAAQ,CAAC;MACLC,IAAI,EAAEL,qBAAqB;MAC3Be,OAAO,EAAEC,GAAG,CAACC;IACjB,CAAC,CAAC;EACN;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}