{"ast":null,"code":"import request from \"../api\";\nimport { EMAIL_CONTENT_REQUEST, EMAIL_LIST_FAILURE, EMAIL_LIST_SUCCESS, EMAIL_LIST_REQUEST, EMAIL_CONTENT_SUCCESS, EMAIL_CONTENT_FAILURE } from \"./constants\";\nexport const getEmailList = pageNo => async dispatch => {\n  try {\n    dispatch({\n      type: EMAIL_LIST_REQUEST\n    });\n    let url = \"\";\n    pageNo === 2 ? url = \"/?page=2\" : url = \"/?page=1\";\n    const {\n      data\n    } = await request.get(url);\n    const list = data.list;\n    dispatch({\n      type: EMAIL_LIST_SUCCESS,\n      payload: list\n    });\n  } catch (err) {\n    dispatch({\n      type: EMAIL_LIST_FAILURE,\n      payload: err.message\n    });\n  }\n};\nexport const getEmailById = id => async dispatch => {\n  try {\n    dispatch({\n      type: EMAIL_CONTENT_REQUEST\n    });\n    const {\n      data\n    } = await request.get(\"/\", {\n      params: {\n        id\n      }\n    });\n    dispatch({\n      type: EMAIL_CONTENT_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: EMAIL_CONTENT_FAILURE,\n      payload: err.message\n    });\n  }\n};","map":{"version":3,"names":["request","EMAIL_CONTENT_REQUEST","EMAIL_LIST_FAILURE","EMAIL_LIST_SUCCESS","EMAIL_LIST_REQUEST","EMAIL_CONTENT_SUCCESS","EMAIL_CONTENT_FAILURE","getEmailList","pageNo","dispatch","type","url","data","get","list","payload","err","message","getEmailById","id","params"],"sources":["E:/roc8-assignment/email-client-app/src/store/emailAction.js"],"sourcesContent":["import request from \"../api\";\r\nimport {\r\n    EMAIL_CONTENT_REQUEST,\r\n    EMAIL_LIST_FAILURE,\r\n    EMAIL_LIST_SUCCESS,\r\n    EMAIL_LIST_REQUEST,\r\n    EMAIL_CONTENT_SUCCESS,\r\n    EMAIL_CONTENT_FAILURE,\r\n  } from \"./constants\";\r\n\r\nexport const getEmailList = (pageNo) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: EMAIL_LIST_REQUEST })\r\n        let url = \"\";\r\n        (pageNo === 2) ? url = \"/?page=2\" : url = \"/?page=1\"\r\n        const { data } = await request.get(url);\r\n        const list = data.list;\r\n        dispatch({\r\n            type: EMAIL_LIST_SUCCESS,\r\n            payload: list,\r\n        })\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: EMAIL_LIST_FAILURE,\r\n            payload: err.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getEmailById = (id) => async(dispatch) => {\r\n    try {\r\n        dispatch({type: EMAIL_CONTENT_REQUEST})\r\n        const { data } = await request.get(\"/\",{\r\n            params: {\r\n                id,\r\n            },\r\n        })\r\n        dispatch({\r\n            type: EMAIL_CONTENT_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: EMAIL_CONTENT_FAILURE,\r\n            payload: err.message\r\n        })\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,OAAO,MAAM,QAAQ;AAC5B,SACIC,qBAAqB,EACrBC,kBAAkB,EAClBC,kBAAkB,EAClBC,kBAAkB,EAClBC,qBAAqB,EACrBC,qBAAqB,QAChB,aAAa;AAEtB,OAAO,MAAMC,YAAY,GAAIC,MAAM,IAAK,MAAOC,QAAQ,IAAK;EACxD,IAAI;IACAA,QAAQ,CAAC;MAACC,IAAI,EAAEN;IAAmB,CAAC,CAAC;IACrC,IAAIO,GAAG,GAAG,EAAE;IACXH,MAAM,KAAK,CAAC,GAAIG,GAAG,GAAG,UAAU,GAAGA,GAAG,GAAG,UAAU;IACpD,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMZ,OAAO,CAACa,GAAG,CAACF,GAAG,CAAC;IACvC,MAAMG,IAAI,GAAGF,IAAI,CAACE,IAAI;IACtBL,QAAQ,CAAC;MACLC,IAAI,EAAEP,kBAAkB;MACxBY,OAAO,EAAED;IACb,CAAC,CAAC;EACN,CAAC,CACD,OAAME,GAAG,EAAC;IACNP,QAAQ,CAAC;MACLC,IAAI,EAAER,kBAAkB;MACxBa,OAAO,EAAEC,GAAG,CAACC;IACjB,CAAC,CAAC;EACN;AACJ,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,EAAE,IAAK,MAAMV,QAAQ,IAAK;EACnD,IAAI;IACAA,QAAQ,CAAC;MAACC,IAAI,EAAET;IAAqB,CAAC,CAAC;IACvC,MAAM;MAAEW;IAAK,CAAC,GAAG,MAAMZ,OAAO,CAACa,GAAG,CAAC,GAAG,EAAC;MACnCO,MAAM,EAAE;QACJD;MACJ;IACJ,CAAC,CAAC;IACFV,QAAQ,CAAC;MACLC,IAAI,EAAEL,qBAAqB;MAC3BU,OAAO,EAAEH;IACb,CAAC,CAAC;EACN,CAAC,CACD,OAAMI,GAAG,EAAC;IACNP,QAAQ,CAAC;MACLC,IAAI,EAAEJ,qBAAqB;MAC3BS,OAAO,EAAEC,GAAG,CAACC;IACjB,CAAC,CAAC;EACN;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}