{"ast":null,"code":"var _jsxFileName = \"E:\\\\roc8-assignment\\\\email-client-app\\\\src\\\\components\\\\Inbox\\\\Inbox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport FilterHeader from \"../FilterHeader/FilterHeader\";\nimport './Inbox.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getEmailList, getEmailById } from '../../store/emailAction';\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Email from '../Email/Email.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inbox = ({\n  split\n}) => {\n  _s();\n  const [filter, setFilter] = useState(\"Unread\");\n  const [favorite, setFavorite] = useState(JSON.parse(sessionStorage.getItem(\"favorites\")) || []);\n  const [read, setRead] = useState(JSON.parse(sessionStorage.getItem(\"read\")) || []);\n  const [selectedEmail, setSelectedEmail] = useState(JSON.parse(sessionStorage.getItem(\"current_email\")) || false);\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  let {\n    emails,\n    loading: emailListLoading\n  } = useSelector(state => state.emailList) || {};\n  const [emailList, setEmailList] = useState();\n  const changeFilter = function (name) {\n    setFilter(name);\n    const filteredEmails = emails.reduce((acc, element) => {\n      if (name === \"Favorites\" && favorite.includes(element.id)) {\n        return [element, ...acc];\n      } else if (name === \"Read\" && read.includes(element.id)) {\n        return [element, ...acc];\n      } else if (!read.includes(element.id)) {\n        return [element, ...acc];\n      }\n      return [...acc, element];\n    }, []);\n    setEmailList(filteredEmails);\n  };\n  const openEmail = e => {\n    navigate(`/${e.target.id}`);\n\n    /*finding  */\n    const emailContent = emails.find(email => email.id === e.target.id);\n    if (e.target.id) {\n      sessionStorage.setItem(\"current_email\", JSON.stringify(emailContent));\n    }\n    setSelectedEmail(emailContent);\n    if (!read.includes(emailContent.id)) {\n      setRead([...read, emailContent.id]);\n    }\n  };\n  useEffect(() => {\n    dispatch(getEmailList(read));\n  }, [dispatch, read]);\n  useEffect(() => {\n    dispatch(getEmailById(id));\n  }, [dispatch, id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(FilterHeader, {\n      category: filter,\n      selectFilter: changeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container__body\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          onClick: openEmail,\n          children: emailListLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this) : emails.map(email => /*#__PURE__*/_jsxDEV(Email, {\n            email: email,\n            fav: favorite,\n            read: read,\n            active: selectedEmail === null || selectedEmail === void 0 ? void 0 : selectedEmail.id\n          }, email === null || email === void 0 ? void 0 : email.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(Inbox, \"jzbAFaG2dVq5vZZuG0Wn4812oIE=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSelector];\n});\n_c = Inbox;\nexport default Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["React","useEffect","useState","FilterHeader","useDispatch","useSelector","getEmailList","getEmailById","useParams","useNavigate","Email","jsxDEV","_jsxDEV","Inbox","split","_s","filter","setFilter","favorite","setFavorite","JSON","parse","sessionStorage","getItem","read","setRead","selectedEmail","setSelectedEmail","id","navigate","dispatch","emails","loading","emailListLoading","state","emailList","setEmailList","changeFilter","name","filteredEmails","reduce","acc","element","includes","openEmail","e","target","emailContent","find","email","setItem","stringify","className","children","category","selectFilter","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","fav","active","_c","$RefreshReg$"],"sources":["E:/roc8-assignment/email-client-app/src/components/Inbox/Inbox.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport FilterHeader from \"../FilterHeader/FilterHeader\";\r\nimport './Inbox.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getEmailList, getEmailById } from '../../store/emailAction';\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport Email from '../Email/Email.jsx';\r\n\r\nconst Inbox = ({split}) => {\r\n    const [filter, setFilter] = useState(\"Unread\");\r\n    const [favorite, setFavorite] = useState(\r\n        JSON.parse(sessionStorage.getItem(\"favorites\")) || []\r\n      );\r\n    const [read, setRead] = useState(\r\n        JSON.parse(sessionStorage.getItem(\"read\")) || []\r\n      );\r\n    const [selectedEmail, setSelectedEmail] = useState(\r\n        JSON.parse(sessionStorage.getItem(\"current_email\")) || false\r\n      );\r\n\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    let { emails, loading:emailListLoading }  = useSelector((state) => state.emailList) || {};\r\n\r\n    const [emailList, setEmailList] = useState();\r\n\r\n    const changeFilter = function (name) {\r\n        setFilter(name);\r\n        const filteredEmails = emails.reduce((acc, element) => {\r\n            if (name === \"Favorites\" && favorite.includes(element.id)) {\r\n              return [element, ...acc];\r\n            } else if (name === \"Read\" && read.includes(element.id)) {\r\n              return [element, ...acc];\r\n            } else if (!read.includes(element.id)) {\r\n              return [element, ...acc];\r\n            }\r\n            return [...acc, element];\r\n          }, []);\r\n      \r\n          setEmailList(filteredEmails);\r\n    }\r\n\r\n    const openEmail = (e) => {\r\n        navigate(`/${e.target.id}`);\r\n        \r\n        /*finding  */\r\n        const emailContent = emails.find((email) => email.id === e.target.id)\r\n        if (e.target.id) {\r\n            sessionStorage.setItem(\"current_email\", JSON.stringify(emailContent));\r\n        }\r\n        setSelectedEmail(emailContent);\r\n        if (!read.includes(emailContent.id)) {\r\n        setRead([...read, emailContent.id]);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getEmailList(read));\r\n    }, [dispatch, read]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getEmailById(id));\r\n    }, [dispatch, id])\r\n    \r\n    return(\r\n        <div className=\"container\" >\r\n             <FilterHeader category={filter} selectFilter={changeFilter}/>\r\n             <div className=\"container__body\">\r\n             <nav>\r\n             <ul onClick={openEmail}>\r\n                {emailListLoading ? (\r\n                <div>Loading...</div>\r\n                ): emails.map((email) => (\r\n                    <Email\r\n                    email={email}\r\n                    key={email?.id}\r\n                    fav={favorite}\r\n                    read={read}\r\n                    active={selectedEmail?.id}\r\n                    />\r\n                ))}\r\n              </ul>\r\n              </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inbox;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}